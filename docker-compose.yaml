name: 'metrics-drilldown'
services:
  grafana-gmd:
    container_name: 'grafana-gmd'
    extends:
      file: .config/docker-compose-base.yaml
      service: grafana
    build:
      args:
        grafana_image: ${GRAFANA_IMAGE:-grafana-enterprise}
        grafana_version: ${GRAFANA_VERSION:-11.6.4}
    ports: !override
      - '${GRAFANA_PORT:-3001}:3000'
    environment:
      GF_SERVER_ROOT_URL: 'http://localhost:${GRAFANA_PORT:-3001}'
      GF_FEATURE_TOGGLES_ENABLE: exploreMetricsUseExternalAppPlugin
      # prevents a Grafana startup error in case a newer plugin version (set in package.json) is used compared to the latest one published in the catalog
      GF_PLUGINS_PREINSTALL_DISABLED: true
    volumes:
      - ./provisioning/dashboards/dashboardJson:/etc/dashboards
      - ../logs-drilldown/dist:/var/lib/grafana/plugins/grafana-lokiexplore-app
    extra_hosts:
      # This allows us to connect to other services running on the host machine.
      # 172.17.0.1 is the default Docker bridge network gateway IP address
      # Using "host-gateway" would be more portable across different Docker setups but fails in our CI build
      - 'host.docker.internal:172.17.0.1'

  grafana-scopes-gmd:
    container_name: 'grafana-scopes-gmd'
    extends:
      service: grafana-gmd
    ports: !override
      - '${GRAFANA_SCOPES_PORT:-3002}:3000'
    environment:
      GF_SERVER_ROOT_URL: 'http://localhost:${GRAFANA_SCOPES_PORT:-3002}'
      GF_FEATURE_TOGGLES_ENABLE: exploreMetricsUseExternalAppPlugin,grafanaAPIServer,grafanaAPIServerWithExperimentalAPIs,scopeFilters,promQLScope,enableScopesInMetricsExplore
    extra_hosts:
      # This allows us to connect to other services running on the host machine.
      # 172.17.0.1 is the default Docker bridge network gateway IP address
      # Using "host-gateway" would be more portable across different Docker setups but fails in our CI build
      - 'host.docker.internal:172.17.0.1'

  prometheus-gmd:
    container_name: 'prometheus-gmd'
    build:
      dockerfile: ./e2e/docker/Dockerfile.prometheus-static-data
      context: .
    ports:
      - '9099:9090'
    command: >
      --enable-feature=remote-write-receiver
      --enable-feature=exemplar-storage
      --enable-feature=native-histograms
      --config.file=/etc/prometheus/prometheus.yml
      --storage.tsdb.path=/prometheus/data
      --storage.tsdb.retention.time=42y

  # e2e testing
  playwright:
    network_mode: host
    container_name: 'playwright-e2e'
    build:
      dockerfile: ./e2e/docker/Dockerfile.playwright
      context: .
    volumes:
      - ./e2e:/app/e2e
      - ./src:/app/src
    command: ${PLAYWRIGHT_ARGS:-}
    profiles: [playwright]
    environment:
      GRAFANA_PORT: ${GRAFANA_PORT:-3001}
      GRAFANA_IMAGE: ${GRAFANA_VERSION:-grafana-enterprise}
      GRAFANA_VERSION: ${GRAFANA_VERSION:-11.6.4}
