name: Debug - Find Project Names

on:
  workflow_dispatch: # Manual trigger only

jobs:
  find_projects:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      repository-projects: write
    steps:
      - name: Find All Available Projects
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            
            console.log(`üîç Searching for projects accessible to: ${owner}/${repo}`);
            console.log("=" .repeat(60));
            
            let foundProjects = 0;
            
            // Method 1: Try Organization Projects
            try {
              console.log("\nüìä ORGANIZATION PROJECTS:");
              console.log("-".repeat(30));
              
              const orgProjectsQuery = `
                query {
                  organization(login: "${owner}") {
                    projectsV2(first: 100) {
                      nodes {
                        id
                        title
                        number
                        url
                        shortDescription
                        public
                      }
                    }
                  }
                }
              `;
              
              const orgResult = await github.graphql(orgProjectsQuery);
              
              if (orgResult.organization?.projectsV2?.nodes?.length > 0) {
                orgResult.organization.projectsV2.nodes.forEach((project, index) => {
                  foundProjects++;
                  console.log(`${index + 1}. Project Name: "${project.title}"`);
                  console.log(`   ID: ${project.id}`);
                  console.log(`   Number: #${project.number}`);
                  console.log(`   Public: ${project.public}`);
                  console.log(`   URL: ${project.url}`);
                  if (project.shortDescription) {
                    console.log(`   Description: ${project.shortDescription}`);
                  }
                  console.log("");
                });
              } else {
                console.log("   No organization projects found");
              }
            } catch (error) {
              console.log(`   Error fetching org projects: ${error.message}`);
            }
            
            // Method 2: Try User Projects (if owner is a user)
            try {
              console.log("\nüë§ USER PROJECTS:");
              console.log("-".repeat(30));
              
              const userProjectsQuery = `
                query {
                  user(login: "${owner}") {
                    projectsV2(first: 100) {
                      nodes {
                        id
                        title
                        number
                        url
                        shortDescription
                        public
                      }
                    }
                  }
                }
              `;
              
              const userResult = await github.graphql(userProjectsQuery);
              
              if (userResult.user?.projectsV2?.nodes?.length > 0) {
                userResult.user.projectsV2.nodes.forEach((project, index) => {
                  foundProjects++;
                  console.log(`${index + 1}. Project Name: "${project.title}"`);
                  console.log(`   ID: ${project.id}`);
                  console.log(`   Number: #${project.number}`);
                  console.log(`   Public: ${project.public}`);
                  console.log(`   URL: ${project.url}`);
                  if (project.shortDescription) {
                    console.log(`   Description: ${project.shortDescription}`);
                  }
                  console.log("");
                });
              } else {
                console.log("   No user projects found");
              }
            } catch (error) {
              console.log(`   Error fetching user projects: ${error.message}`);
            }
            
            // Method 3: Try Repository-linked Projects
            try {
              console.log("\nüîó REPOSITORY-LINKED PROJECTS:");
              console.log("-".repeat(30));
              
              const repoProjectsQuery = `
                query {
                  repository(owner: "${owner}", name: "${repo}") {
                    projectsV2(first: 100) {
                      nodes {
                        id
                        title
                        number
                        url
                        shortDescription
                        public
                      }
                    }
                  }
                }
              `;
              
              const repoResult = await github.graphql(repoProjectsQuery);
              
              if (repoResult.repository?.projectsV2?.nodes?.length > 0) {
                repoResult.repository.projectsV2.nodes.forEach((project, index) => {
                  foundProjects++;
                  console.log(`${index + 1}. Project Name: "${project.title}"`);
                  console.log(`   ID: ${project.id}`);
                  console.log(`   Number: #${project.number}`);
                  console.log(`   Public: ${project.public}`);
                  console.log(`   URL: ${project.url}`);
                  if (project.shortDescription) {
                    console.log(`   Description: ${project.shortDescription}`);
                  }
                  console.log("");
                });
              } else {
                console.log("   No repository-linked projects found");
              }
            } catch (error) {
              console.log(`   Error fetching repo projects: ${error.message}`);
            }
            
            // Summary
            console.log("\n" + "=".repeat(60));
            console.log(`üéØ SUMMARY: Found ${foundProjects} total projects`);
            console.log("=".repeat(60));
            
            if (foundProjects === 0) {
              console.log("\n‚ùå No projects found! This could mean:");
              console.log("   1. No GitHub Projects exist for this org/user/repo");
              console.log("   2. The projects are private and not accessible");
              console.log("   3. Permission issues with the GitHub token");
              console.log("\nüí° To create a project:");
              console.log("   - Go to github.com/orgs/${owner}/projects");
              console.log("   - Or github.com/${owner}/${repo}/projects");
              console.log("   - Click 'New project'");
            } else {
              console.log("\n‚úÖ Copy the exact project name from above to use in your workflow!");
            }
