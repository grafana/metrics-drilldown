name: Playwright Published

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: 'read'

jobs:
  build:
    name: Build plugin
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    outputs:
      plugin-version: ${{ steps.get-version.outputs.plugin-version }}
      plugin-name: ${{ steps.get-name.outputs.plugin-name }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Setup Node.js environment
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build frontend
        run: npm run build -- --profile --json stats.json

      - name: Get vault secrets
        id: get-secrets
        uses: grafana/shared-workflows/actions/get-vault-secrets@get-vault-secrets-v1.2.0
        with:
          repo_secrets: |
            access_policy_token=ci:access_policy_token
          export_env: false

      - name: Get plugin version
        id: get-version
        run: |
          version=$(jq -r .info.version dist/plugin.json)
          echo "plugin-version=$version" >> $GITHUB_OUTPUT

      - name: Get plugin name
        id: get-name
        run: |
          name=$(jq -r .id dist/plugin.json)
          echo "plugin-name=$name" >> $GITHUB_OUTPUT

      - name: Sign and package
        uses: grafana/plugin-ci-workflows/actions/plugins/package@main
        with:
          output-folder: dist-artifacts
          universal: 'true'
          dist-folder: dist
          access-policy-token: ${{ fromJSON(steps.get-secrets.outputs.secrets).access_policy_token }}

      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: dist-artifacts
          path: dist-artifacts/
          retention-days: 7

  playwright:
    needs: build
    uses: grafana/plugin-ci-workflows/.github/workflows/playwright-docker.yml@main
    with:
      id: ${{ needs.build.outputs.plugin-name }}
      version: ${{ needs.build.outputs.plugin-version }}
      upload-artifacts: true
      report-path: e2e/test-reports/
      grafana-compose-file: docker-compose.yaml
      grafana-url: http://localhost:3001
      skip-grafana-dev-image: true
    permissions:
      contents: read
      id-token: write
