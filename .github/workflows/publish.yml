name: Publish to plugin catalog
description: Upload new plugin artifact to GCS & publish to plugin catalog

# Version Tag Publishing Process (TODO: Automate this process more):
# 1. Create your feature branch and make changes
# 2. Get your feature PR approved
# 3. Create a separate version bump PR:
#    - git switch -c bump-version-vX.Y.Z
#    - npm version <type>  # this creates the commit and tag (see https://docs.npmjs.com/cli/commands/npm-version for <type> options, e.g. patch, minor, major, prerelease, etc.)
#    - git push origin bump-version-vX.Y.Z --tags
#    - update CHANGELOG.md with a link to the tag's release notes
# 4. Get version bump PR approved
# 5. Merge feature PR first
# 6. Merge version bump PR
# The workflow will trigger when the version tag lands on main via the merge

on:
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        options:
          - dev
          - ops
          - prod
  push:
    tags:
      - 'v*' # Run workflow on version tags, e.g. v1.0.0.

permissions:
  contents: 'write'
  id-token: 'write'
  attestations: 'write'

jobs:
  CD:
    name: Deploy plugin
    # Don't run on forks, ensure tag is on main branch, and restrict workflow_dispatch to main/tag branches
    if: |
      github.repository == 'grafana/metrics-drilldown' &&
      (
        (github.event_name == 'push' && contains(github.ref, 'refs/tags/v')) ||
        (github.event_name == 'workflow_dispatch' && (github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags/v')))
      )
    uses: grafana/plugin-ci-workflows/.github/workflows/cd.yml@main
    with:
      environment: ${{ inputs.environment || 'prod' }}
      upload-playwright-artifacts: true # IMPORTANT: we must ensure there are no unmasked secrets in the E2E tests
      attestation: true # this guarantees that the plugin was built from the source code provided in the release
