# This GitHub Action automates the process of building Grafana plugins.
# (For more information, see https://github.com/grafana/plugin-actions/blob/main/build-plugin/README.md)
name: Build and release to GCS when a new version tag is created

on:
  push:
    tags:
      - 'v*' # Run workflow on version tags, e.g. v1.0.0.

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        # Only build and release if the repository is grafana/metrics-drilldown (not a fork)
        if: github.repository == 'grafana/metrics-drilldown'

      - id: get-secrets
        uses: grafana/shared-workflows/actions/get-vault-secrets@main
        with:
          common_secrets: |
            GCP_UPLOAD_ARTIFACTS_KEY=grafana/integration-artifacts-uploader-service-account:'credentials.json'
            GRAFANA_ACCESS_POLICY_TOKEN=plugins/sign-plugin-access-policy-token:token

      - name: Build plugin
        id: build-plugin
        uses: grafana/plugin-actions/build-plugin@main
        with:
          policy_token: ${{ steps.get-secrets.outputs.GRAFANA_ACCESS_POLICY_TOKEN }}

      - name: Get plugin metadata
        id: metadata
        run: |
          sudo apt-get install jq

          export GRAFANA_PLUGIN_ID=$(cat src/plugin.json | jq -r .id)
          export GRAFANA_PLUGIN_ARTIFACT=${GRAFANA_PLUGIN_ID}-latest.zip

          echo "plugin-id=${GRAFANA_PLUGIN_ID}" >> $GITHUB_OUTPUT
          echo "archive=${GRAFANA_PLUGIN_ARTIFACT}" >> $GITHUB_OUTPUT

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ env.GCP_UPLOAD_ARTIFACTS_KEY }}'

      - id: 'create-latest'
        run: cp ${{ steps.build-plugin.outputs.archive }} ${{ steps.metadata.outputs.archive }}

      - id: 'upload-to-gcs'
        name: 'Upload assets to latest'
        uses: 'google-github-actions/upload-cloud-storage@v1'
        with:
          path: ./
          destination: 'integration-artifacts/${{ steps.metadata.outputs.plugin-id }}/'
          glob: '*.zip'
          parent: false
